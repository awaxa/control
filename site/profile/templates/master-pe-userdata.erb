#!/bin/bash

set -x

RESULTS_FILE='/root/userdata.log'

function check_exit_status() {
  if [ ! -f $RESULTS_FILE ]; then
    echo '1' > $RESULTS_FILE
  fi
}

trap check_exit_status INT TERM EXIT

function write_masteranswers() {
  cat > /opt/masteranswers.txt << ANSWERS
q_all_in_one_install=y
q_backup_and_purge_old_configuration=n
q_backup_and_purge_old_database_directory=n
q_database_host=localhost
q_database_install=y
q_install=y
q_pe_database=y
q_puppet_cloud_install=y
q_puppet_enterpriseconsole_auth_password=<%= @pe_password %>
q_puppet_enterpriseconsole_auth_user_email=<%= @pe_username %>
q_puppet_enterpriseconsole_httpd_port=443
q_puppet_enterpriseconsole_install=y
q_puppet_enterpriseconsole_master_hostname=$HOSTNAME
q_puppet_enterpriseconsole_smtp_host=localhost
q_puppet_enterpriseconsole_smtp_password=
q_puppet_enterpriseconsole_smtp_port=25
q_puppet_enterpriseconsole_smtp_use_tls=n
q_puppet_enterpriseconsole_smtp_user_auth=n
q_puppet_enterpriseconsole_smtp_username=
q_puppet_symlinks_install=y
q_puppetagent_certname=$HOSTNAME
q_puppetagent_install=y
q_puppetagent_server=$HOSTNAME
q_puppetdb_hostname=$HOSTNAME
q_puppetdb_install=y
q_puppetdb_port=8081
q_puppetmaster_certname=$HOSTNAME
q_puppetmaster_dnsaltnames=$HOSTNAME<% if @pe_altnames %>,<%= @pe_altnames %><% end %>
q_puppetmaster_enterpriseconsole_hostname=localhost
q_puppetmaster_enterpriseconsole_port=443
q_puppetmaster_install=y
q_run_updtvpkg=n
q_vendor_packages_install=y
ANSWERS
}

function install_puppetmaster() {
  if [ ! -d /opt/puppet-enterprise ]; then
    mkdir -p /opt/puppet-enterprise
  fi
  if [ ! -f /opt/pe-installer.tar.gz ]; then
    case ${breed} in
      'redhat')
        ntpdate -u 0.north-america.pool.ntp.org
        curl -s -o /opt/pe-installer.tar.gz "https://s3.amazonaws.com/pe-builds/released/<%= @pe_version_string %>/puppet-enterprise-<%= @pe_version_string %>-el-6-x86_64.tar.gz" ;;
      'debian')
        curl -s -o /opt/pe-installer.tar.gz "https://s3.amazonaws.com/pe-builds/released/<%= @pe_version_string %>/puppet-enterprise-<%= @pe_version_string %>-debian-7-amd64.tar.gz" ;;
    esac
    #Drop installer in predictable location
    tar --extract --file=/opt/pe-installer.tar.gz --strip-components=1 --directory=/opt/puppet-enterprise
  fi
  write_masteranswers
  /opt/puppet-enterprise/puppet-enterprise-installer -a /opt/masteranswers.txt
}

function make_partition {
  parted -s "$1" unit s mkpart primary "$2" "$3"
}

function get_partition {
  echo $(parted /dev/xvda unit s print free | grep 'Free Space' | tail -n 1)
}

function format_partition {
  partx -v -a /dev/xvda
  mkfs.ext4 /dev/xvda2
  mount /dev/xvda2 /opt
  echo '/dev/xvda2              /opt                    ext4    defaults        0 2' >> /etc/fstab
}

function make_swapfile {
  dd if=/dev/zero of=/swapfile bs=1M count=4096
  mkswap -f /swapfile
  swapon /swapfile
}

function provision() {
  if [ -f /etc/redhat-release ]; then
    export breed='redhat'
    setenforce 0
  elif [ -f /etc/debian_version ]; then
    export breed='debian'
  else
    echo 'This OS is not supported'
    exit 1
  fi

<% case @cloud
when 'aws' %>
  MD='http://169.254.169.254/latest/meta-data/'
  HOSTNAME=$(curl -fs $MD/public-hostname)

  make_partition /dev/xvda $(get_partition)
  format_partition
<% else %>
  HOSTNAME=$(hostname)

  make_swapfile
<% end %>

  install_puppetmaster
  export PATH=/opt/puppet/bin:$PATH

  rm -rfv "$(puppet config print confdir)/environments"
  mkdir -pv "$(puppet config print confdir)/environments"

  puppet resource package git ensure=present
  git clone https://github.com/awaxa/control.git /tmp/control
  mkdir -p /etc/puppetlabs/facter/facts.d
  echo 'role=pe::master' > /etc/puppetlabs/facter/facts.d/role.txt
  gem install r10k --no-rdoc --no-ri -v 1.4.0
  PUPPETFILE=/tmp/control/Puppetfile PUPPETFILE_DIR=/tmp/control/modules r10k puppetfile install --verbose
  puppet apply /tmp/control/manifests --modulepath='/tmp/control/site:/tmp/control/modules:/opt/puppet/share/puppet/modules'
}

provision 2>&1 | tee $RESULTS_FILE
